#!/usr/bin/env node
// 引入模块
const exec = require('child_process').exec;
const program = require('commander')
const figlet = require('figlet');
const chalk = require('chalk');
const shell = require('shelljs');

const db = require('./db');

const VERSION = '0.1.0';
const APPNAME = 'mark'

// show available commands
program
  .command('add <sortName> <originSite>')
  .alias('a')
  .description('add the the origin-site alias sort-name')
  .action(async function (sortName, originSite){
    try{
      await db.put(sortName, originSite)
      console.log(`add site ${originSite} alias ${sortName} successfully~`)
    }catch(err) {
      console.log(chalk.red('add site failed~ try again!'))
    }

  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ show add wiki http://wiki.org');
    console.log();
  });
  program
  .command('del <sortName>')
  .alias('d')
  .description('delete the the origin-site by sort-name')
  .action(async function (sortName){
    try{
      const site = await db.del(sortName)
      console.log(`delete site ${sortName} successfully~`)
    }catch(err) {
      console.log(chalk.red('delete site failed~ try again!'))
    }

  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ show delete wiki');
    console.log();
  });
  // open one site by sort-name
  program
  .command('open <sortName>')
  .alias('o')
  .description('open one site by sort-name')
  .action(async function (sortName){
    try{
      let site = await db.get(sortName);
      site = site.toString();
      if((/^https?:\/\//ig).test(site)) {
        console.log('open site: ',chalk.green(`${site}`))
        shell.exec(`open ${site}`)
      } else {
        shell.exec(`echo ${site}`)
      }
      
    }catch(err) {
      console.log(chalk.yellow(`can not find the site of named 【${chalk.red(sortName)}】~`))
    }

  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ show open|o wiki');
    console.log();
  });
// show all the list
  program
  .command('list [type]')
  .alias('l')
  .description('list all the list')
  .action(async function (type){
    try{
      db.createReadStream()
        .on('data', function (data) {
          console.log(chalk.greenBright(data.key.toString()), 
            ':', chalk.blueBright(data.value.toString()))
        })
    }catch(err) {
      console.log(chalk.yellow('find sites failed~'))
    }

  }).on('--help', function() {
    console.log('  Examples:');
    console.log();
    console.log('    $ show list|l');
    console.log();
  });
program.parse(process.argv);
if(program.args.length === 0) {
  program.help();
}

/**
 * 展现工具名称
 */
function showName () {
  figlet(APPNAME, function(err, data) {
    if (err) {
      console.log('err show name~')
      return;
    }
    console.log(data)
  });
}